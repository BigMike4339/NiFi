{"flowContents":{"identifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8","instanceIdentifier":"bbebea30-0191-1000-679d-b98bff6d7d0e","name":"Encrypted","comments":"","position":{"x":2248.0,"y":792.0},"processGroups":[],"remoteProcessGroups":[],"processors":[{"identifier":"e2c0cb91-9b66-3f96-b35a-78759e788241","instanceIdentifier":"bc328b44-0191-1000-2243-35be8f704052","name":"UpdateAttribute","comments":"","position":{"x":136.0,"y":112.0},"type":"org.apache.nifi.processors.attributes.UpdateAttribute","bundle":{"group":"org.apache.nifi","artifact":"nifi-update-attribute-nar","version":"1.22.0"},"properties":{"Delete Attributes Expression":null,"Store State":"Do not store state","canonical-value-lookup-cache-size":"100","Stateful Variables Initial Value":null},"propertyDescriptors":{"Delete Attributes Expression":{"name":"Delete Attributes Expression","displayName":"Delete Attributes Expression","identifiesControllerService":false,"sensitive":false},"Store State":{"name":"Store State","displayName":"Store State","identifiesControllerService":false,"sensitive":false},"canonical-value-lookup-cache-size":{"name":"canonical-value-lookup-cache-size","displayName":"Cache Value Lookup Cache Size","identifiesControllerService":false,"sensitive":false},"Stateful Variables Initial Value":{"name":"Stateful Variables Initial Value","displayName":"Stateful Variables Initial Value","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":25,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"9b7e1fd6-4a2d-3f2f-aad9-eb3084fbade6","instanceIdentifier":"c1f428d6-0191-1000-a49a-9f2ae54a5137","name":"PutFile","comments":"","position":{"x":224.0,"y":1064.0},"type":"org.apache.nifi.processors.standard.PutFile","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.22.0"},"properties":{"Group":null,"Owner":null,"Create Missing Directories":"true","Permissions":null,"Maximum File Count":null,"Last Modified Time":null,"Directory":"/opt","Conflict Resolution Strategy":"replace"},"propertyDescriptors":{"Group":{"name":"Group","displayName":"Group","identifiesControllerService":false,"sensitive":false},"Owner":{"name":"Owner","displayName":"Owner","identifiesControllerService":false,"sensitive":false},"Create Missing Directories":{"name":"Create Missing Directories","displayName":"Create Missing Directories","identifiesControllerService":false,"sensitive":false},"Permissions":{"name":"Permissions","displayName":"Permissions","identifiesControllerService":false,"sensitive":false},"Maximum File Count":{"name":"Maximum File Count","displayName":"Maximum File Count","identifiesControllerService":false,"sensitive":false},"Last Modified Time":{"name":"Last Modified Time","displayName":"Last Modified Time","identifiesControllerService":false,"sensitive":false},"Directory":{"name":"Directory","displayName":"Directory","identifiesControllerService":false,"sensitive":false},"Conflict Resolution Strategy":{"name":"Conflict Resolution Strategy","displayName":"Conflict Resolution Strategy","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["success"],"scheduledState":"DISABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"2c9cabbe-5a1c-3e21-b098-6ed18bfa39ed","instanceIdentifier":"c1f565c5-0191-1000-8fff-77200f1c3ea9","name":"UpdateAttribute","comments":"","position":{"x":472.0,"y":792.0},"type":"org.apache.nifi.processors.attributes.UpdateAttribute","bundle":{"group":"org.apache.nifi","artifact":"nifi-update-attribute-nar","version":"1.22.0"},"properties":{"Delete Attributes Expression":null,"filename":"a2.json","Store State":"Do not store state","canonical-value-lookup-cache-size":"100","Stateful Variables Initial Value":null},"propertyDescriptors":{"Delete Attributes Expression":{"name":"Delete Attributes Expression","displayName":"Delete Attributes Expression","identifiesControllerService":false,"sensitive":false},"filename":{"name":"filename","displayName":"filename","identifiesControllerService":false,"sensitive":false},"Store State":{"name":"Store State","displayName":"Store State","identifiesControllerService":false,"sensitive":false},"canonical-value-lookup-cache-size":{"name":"canonical-value-lookup-cache-size","displayName":"Cache Value Lookup Cache Size","identifiesControllerService":false,"sensitive":false},"Stateful Variables Initial Value":{"name":"Stateful Variables Initial Value","displayName":"Stateful Variables Initial Value","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":25,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"DISABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"7e12b3e1-c8bd-3b89-9c98-5bd71556320f","instanceIdentifier":"bbec8ea2-0191-1000-7a3f-e532c6fe2658","name":"GenerateFlowFile","comments":"","position":{"x":136.0,"y":-88.0},"type":"org.apache.nifi.processors.standard.GenerateFlowFile","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.22.0"},"properties":{"character-set":"UTF-8","File Size":"0B","mime-type":"application/json","generate-ff-custom-text":"[\n  {\n    \"id\": 1,\n    \"name\": \"Раз\",\n    \"age\": 38,\n    \"email\": \"55w72TlQxz@example.com\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Два\",\n    \"age\": 62,\n    \"email\": \"Gp3aqrBbcQ@example.com\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Три\",\n    \"age\": 42,\n    \"email\": \"diGRIcDDzX@example.com\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Li8Vs\",\n    \"age\": 48,\n    \"email\": \"IVAPTtKZYc@example.com\"\n  },\n  {\n    \"id\": 5,\n    \"name\": \"8UJ0S\",\n    \"age\": 55,\n    \"email\": \"PPFRDL48t9@example.com\"\n  },\n  {\n    \"id\": 6,\n    \"name\": \"F1Jwq\",\n    \"age\": 42,\n    \"email\": \"n7n7SPM71a@example.com\"\n  },\n  {\n    \"id\": 7,\n    \"name\": \"8uKwu\",\n    \"age\": 24,\n    \"email\": \"bWiVCNzxMX@example.com\"\n  },\n  {\n    \"id\": 8,\n    \"name\": \"PjJrL\",\n    \"age\": 63,\n    \"email\": \"LuHvDzKA8P@example.com\"\n  },\n  {\n    \"id\": 9,\n    \"name\": \"5ZANU\",\n    \"age\": 54,\n    \"email\": \"CrLu51wJLZ@example.com\"\n  },\n  {\n    \"id\": 10,\n    \"name\": \"ocAfw\",\n    \"age\": 20,\n    \"email\": \"K0cSNgSHPb@example.com\"\n  },\n  {\n    \"id\": 11,\n    \"name\": \"QzOMW\",\n    \"age\": 23,\n    \"email\": \"lGTFTqpxJI@example.com\"\n  },\n  {\n    \"id\": 12,\n    \"name\": \"LgY4A\",\n    \"age\": 43,\n    \"email\": \"Ett5PSa4oi@example.com\"\n  },\n  {\n    \"id\": 13,\n    \"name\": \"tQF3r\",\n    \"age\": 25,\n    \"email\": \"6shwQd36y4@example.com\"\n  },\n  {\n    \"id\": 14,\n    \"name\": \"L7UCt\",\n    \"age\": 34,\n    \"email\": \"fOf48etmi6@example.com\"\n  },\n  {\n    \"id\": 15,\n    \"name\": \"CJXVo\",\n    \"age\": 41,\n    \"email\": \"zAJ2lrVzN6@example.com\"\n  },\n  {\n    \"id\": 16,\n    \"name\": \"gJxu1\",\n    \"age\": 34,\n    \"email\": \"VyeaWRcBQ7@example.com\"\n  }\n]","Batch Size":"1","Unique FlowFiles":"false","Data Format":"Text"},"propertyDescriptors":{"character-set":{"name":"character-set","displayName":"Character Set","identifiesControllerService":false,"sensitive":false},"File Size":{"name":"File Size","displayName":"File Size","identifiesControllerService":false,"sensitive":false},"mime-type":{"name":"mime-type","displayName":"Mime Type","identifiesControllerService":false,"sensitive":false},"generate-ff-custom-text":{"name":"generate-ff-custom-text","displayName":"Custom Text","identifiesControllerService":false,"sensitive":false},"Batch Size":{"name":"Batch Size","displayName":"Batch Size","identifiesControllerService":false,"sensitive":false},"Unique FlowFiles":{"name":"Unique FlowFiles","displayName":"Unique FlowFiles","identifiesControllerService":false,"sensitive":false},"Data Format":{"name":"Data Format","displayName":"Data Format","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"1cb87f13-3389-39a2-8fbc-e601c639e266","instanceIdentifier":"bbf31876-0191-1000-4f79-a0f977f5bd10","name":"Decrypted","comments":"","position":{"x":464.0,"y":584.0},"type":"org.apache.nifi.processors.script.ScriptedTransformRecord","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.22.0"},"properties":{"Script File":null,"Script Engine":"Groovy","Script Body":"import javax.crypto.Cipher\nimport javax.crypto.SecretKey\nimport javax.crypto.SecretKeyFactory\nimport javax.crypto.spec.IvParameterSpec\nimport javax.crypto.spec.PBEKeySpec\nimport javax.crypto.spec.SecretKeySpec\nimport java.security.Key\nimport java.security.spec.KeySpec\nimport java.util.Base64\n\nString encryptionKey = \"#{encryption.key}\"\nKey aesKey = new SecretKeySpec(encryptionKey.getBytes(\"UTF-8\"), \"AES\")\nCipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\")\ncipher.init(Cipher.DECRYPT_MODE, aesKey)\nrecord.setValue(\"name\", cipher.doFinal(Base64.getDecoder().decode(record.getValue(\"name\"))))\nrecord.setValue(\"email\", cipher.doFinal(Base64.getDecoder().decode(record.getValue(\"email\"))))\nrecord","Record Writer":"ab313356-337b-3f84-8100-e015dd9a48ae","Record Reader":"0ba130e2-0c72-35ab-817e-108988f635e2","Module Directory":null},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Language","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"Record Writer":{"name":"Record Writer","displayName":"Record Writer","identifiesControllerService":true,"sensitive":false},"Record Reader":{"name":"Record Reader","displayName":"Record Reader","identifiesControllerService":true,"sensitive":false},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["FILE","DIRECTORY"]}}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"DISABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"a4a48034-1975-326b-814f-d3a4f5d385cd","instanceIdentifier":"bc874a54-0191-1000-7da0-f01cb8b1485d","name":"Encrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields\n\nНеобязательные property:\nneed_normalyze (false) - необходимость нормализация полей;\nneed_debug_phone (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации;\nneed_debug_email (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации.","position":{"x":-40.0,"y":352.0},"type":"org.apache.nifi.processors.script.ExecuteScript","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.22.0"},"properties":{"Script File":null,"Script Engine":"Groovy","Script Body":"// Version: 0.0.1\n\n/*\nОбязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields\n\nНеобязательные property:\nneed_normalyze (false) - необходимость нормализация полей;\nneed_debug_phone (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации;\nneed_debug_email (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации.\n\nПример конфига в атрибуте encrypted_fields:\n[\n    {\n        \"name\": \"phone\",\n        \"type\": 1\n    },\n    {\n        \"name\": \"birthdate\",\n        \"type\": 2\n    },\n    {\n        \"name\": \"name\",\n        \"type\": 3\n    },\n    {\n        \"name\": \"email\",\n        \"type\": 4\n    }\n]\n\n*/\n\nimport org.apache.commons.io.IOUtils\nimport java.nio.charset.StandardCharsets\nimport groovy.json.*\n\nimport javax.crypto.Cipher\nimport javax.crypto.spec.SecretKeySpec\nimport java.security.Key\nimport java.security.NoSuchAlgorithmException\n\ndef flowFile = session.get()\nif (!flowFile) return\n\npublic static String getEncryptedValue(String value, String encryptionKey) {\n    //return value\n    String generatedValue = null\n    try {\n        Key aesKey = new SecretKeySpec(encryptionKey.getBytes('UTF-8'), 'AES')\n        Cipher cipher = Cipher.getInstance('AES/ECB/PKCS5Padding')\n        cipher.init(Cipher.ENCRYPT_MODE, aesKey)\n        generatedValue = cipher.doFinal(value.getBytes('UTF-8')).encodeBase64()\n    } catch (NoSuchAlgorithmException e) {\n        e.printStackTrace()\n    }\n    return generatedValue\n}\n\npublic static Map normalyze_type1(String text) {\n    // Phone\n    /*\n    a) выставляем значение поля valid_phone_flg = 1;\n    b) если длина входной строки менее 10 символов, выставляем значение поля valid_phone_flg = 0, заканчиваем обработку;\n    c) если длина входной строки равна 10 символам и первый символ '9', добавляем '+7’, заканчиваем обработку;\n    d) если длина входной строки равна 11 и первый символ ‘8', заменяем его на '+7’, заканчиваем обработку;\n    e) если длина входной строки равна 11, добавляем '+’, заканчиваем обработку;\n    f) если длина входной строки равна 12 и и первые два символа ‘+8', заменяем их на '+7’, заканчиваем обработку;\n    g) если длина входной строки равна 12 и и первый символ ‘+', заканчиваем обработку;\n    h) выставляем значение поля valid_phone_flg = 0, возвращаем невалидное значение\n    */\n\n    def valid_phone_flg = '1'\n    text = text.replaceAll('[-()]', '')\n    text = text.replaceAll(' ', '')\n    String phone = text\n    if (phone.length() < 10) { valid_phone_flg = '0' }\n    else if (phone.length() == 10 && phone.substring(0, 1) == '9') { phone = '+7' + phone }\n    else if (phone.length() == 11 && phone.substring(0, 1) == '8') { phone = '+7' + phone.substring(1, phone.length()) }\n    else if (phone.length() == 11) { phone = '+' + phone }\n    else if (phone.length() == 12 && phone.substring(0, 2) == '+8') { phone = '+7' + phone.substring(2, phone.length()) }\n    else if (phone.length() == 12 && phone.substring(0, 1) == '+') { valid_phone_flg = '1' }\n    else { valid_phone_flg = '0' }\n\n    return [ph: phone, flg: valid_phone_flg]\n}\n\npublic static String normalyze_type2(String text) {\n    // Birthdate\n    String birth = text\n    if (birth.matches(\"[A-Za-zА-Яа-я]*\")) { return null }\n    else {\n        if (birth ==~ /\\d{4}\\-\\d{2}\\-\\d{2}/) { return birth }\n        else if (birth ==~ /\\d{1}\\.\\d{1}\\.\\d{4}/ || birth ==~ /\\d{1}\\.\\d{2}\\.\\d{4}/ || birth ==~ /\\d{2}\\.\\d{2}\\.\\d{4}/ || birth ==~ /\\d{2}\\.\\d{1}\\.\\d{4}/) {\n                birth = Date.parse(\"dd.MM.yy\", birth).format(\"yyyy-MM-dd\")\n            }\n            else {\n                return null\n            }\n    }\n    return birth \n}\n\npublic static String normalyze_type3(String text) {\n    // Others\n    text = text.replaceAll(' ', '')\n    text = text.toLowerCase()\n    return text\n}\n\npublic static Map normalyze_type4(String text) {\n    // Email\n    def valid_email_flg = '0'\n    text = text.replaceAll(' ', '').toLowerCase()\n    String email = text\n    if (email ==~ /(?:[a-z0-9!#$%&\\'*+=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\\'*+=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/) {\n    valid_email_flg = '1' }\n    return [em: email, flg: valid_email_flg]\n}\n\ntry {\n    flowFile = session.write(flowFile,\n        { inputStream, outputStream ->\n\n            def content = IOUtils.toString(inputStream, StandardCharsets.UTF_8)\n            def content_list = new JsonSlurper().parseText(content)\n            def result_list = []\n\n            // ===== get attributes and parameters\n            // encrypted_fields\n            def encrypted_fields = flowFile.getAttribute('encrypted_fields')\n            if (!encrypted_fields) {\n                encrypted_fields = context.getProperty('encrypted_fields').getValue()\n            }\n            if (!encrypted_fields) {\n                log.error('encrypted_fields is null')\n                return\n            }\n            def l = new JsonSlurper().parseText(encrypted_fields)\n\n            // need_normalyze\n            def need_normalyze = context.getProperty('need_normalyze').getValue()\n            if (need_normalyze) {\n                need_normalyze = need_normalyze.toBoolean()\n            }\n            else { need_normalyze = false }\n\n            // need_debug_phone\n            def need_debug_phone = context.getProperty('need_debug_phone').getValue()\n            if (need_debug_phone) {\n                need_debug_phone = need_debug_phone.toBoolean()\n            }\n            else { need_debug_phone = false }\n\n            // need_debug_email\n            def need_debug_email = context.getProperty('need_debug_email').getValue()\n            if (need_debug_email) {\n                need_debug_email = need_debug_email.toBoolean()\n            }\n            else { need_debug_email = false }\n\n            // get sensitive parameter\n            def password = context.getProperty('encrypted_pass').evaluateAttributeExpressions().getValue()\n            if (!password) {\n                log.error('encrypted_pass is null')\n                return\n            }\n\n            content_list.each { map ->\n\n                def phone_flg = 0\n                String phone_orig, phone_nrml\n                def email_flg = 0\n                String email_orig, email_nrml\n\n                map.each { entry ->\n                    l.each { a ->\n                        // phone\n                        if (entry.key == a.name && (entry.value) && a.type == 1) {\n                            phone_orig = entry.value\n                            if ((entry.value)) {\n                                if (need_normalyze) {\n                                    Map rv = normalyze_type1(entry.value)\n                                    phone_flg = rv.flg\n                                    phone_nrml = rv.ph\n                                    entry.value = getEncryptedValue(phone_nrml, password)\n                                }\n                                else { entry.value = getEncryptedValue(entry.value, password) }\n                            }\n                            else {\n                                phone_flg = 0\n                            }\n                        }\n                        // birthdate\n                        if (entry.key == a.name && (entry.value) && a.type == 2) {\n                            if (need_normalyze) {\n                                def rv = normalyze_type2(entry.value)\n                                if (rv != null) {entry.value = getEncryptedValue(rv, password) }\n                                else { entry.value = null }\n                            }\n                            else { entry.value = getEncryptedValue(entry.value, password) }\n                        }\n                        // name\n                        if (entry.key == a.name && (entry.value) && a.type == 3) {\n                            if (need_normalyze) {\n                                def rv = normalyze_type3(entry.value)\n                                //log.error('entry.value = {}, rv = {}.', entry.value, rv)\n                                if (rv != null) {entry.value = getEncryptedValue(rv, password) }\n                                else { entry.value = null }\n                            }\n                            else { entry.value = getEncryptedValue(entry.value, password) }\n                        }\n                        // email\n                        if (entry.key == a.name && (entry.value) && a.type == 4) {\n                            email_orig = entry.value\n                            if ((entry.value)) {\n                                if (need_normalyze) {\n                                    Map rv = normalyze_type4(entry.value)\n                                    email_flg = rv.flg\n                                    email_nrml = rv.em\n                                    //log.error('entry.value = {}, rv.em = {}, email_nrml = {}, email_flg = {}.', entry.value, rv.em, email_nrml, email_flg)\n                                    entry.value = getEncryptedValue(email_nrml, password)\n                                }\n                                else { entry.value = getEncryptedValue(entry.value, password) }\n                            }\n                            else {\n                                email_flg = 0\n                            }\n                        }\n                    }\n                }\n\n                if (need_debug_phone) {\n                    map.put('valid_phone_flg', phone_flg)\n                    map.put('_phone_orig', phone_orig)\n                    map.put('_phone_nrml', phone_nrml)\n                }\n                if (need_debug_email) {\n                    map.put('valid_email_flg', email_flg)\n                    map.put('_email_orig', email_orig)\n                    map.put('_email_nrml', email_nrml)\n                }\n\n                def json = JsonOutput.toJson(map)\n                result_list << JsonOutput.prettyPrint(json)\n            }\n\n            outputStream.write(result_list.toListString().getBytes(StandardCharsets.UTF_8))\n        } as StreamCallback)\n    session.transfer(flowFile, REL_SUCCESS)\n} catch (Exception e) {\n    log.error('Error during JSON operations', e)\n    session.transfer(flowFile, REL_FAILURE)\n}\n","encrypted_pass":"#{encrypted.key.sens}","Module Directory":null,"encrypted_fields":"[\n   {\n       \"name\": \"name\",\n       \"type\": 3\n   },\n   {\n       \"name\": \"email\",\n       \"type\": 4\n   }\n]"},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Engine","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"encrypted_pass":{"name":"encrypted_pass","displayName":"encrypted_pass","identifiesControllerService":false,"sensitive":true},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["FILE","DIRECTORY"]}},"encrypted_fields":{"name":"encrypted_fields","displayName":"encrypted_fields","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"edab008e-ab2e-3674-98b5-056320b1a664","instanceIdentifier":"c0e8160a-0191-1000-b037-aa05f88dc185","name":"Dencrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields","position":{"x":-48.0,"y":584.0},"type":"org.apache.nifi.processors.script.ExecuteScript","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.22.0"},"properties":{"Script File":null,"Script Engine":"Groovy","Script Body":"// Version: 0.0.1\n\n/*\nОбязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields\n\nПример конфига в атрибуте encrypted_fields:\n[\n    {\n        \"name\": \"phone\",\n        \"type\": 1\n    },\n    {\n        \"name\": \"birthdate\",\n        \"type\": 2\n    },\n    {\n        \"name\": \"name\",\n        \"type\": 3\n    },\n    {\n        \"name\": \"email\",\n        \"type\": 4\n    }\n]\n\n*/\n\nimport org.apache.commons.io.IOUtils\nimport java.nio.charset.StandardCharsets\nimport groovy.json.*\n\nimport javax.crypto.Cipher\nimport javax.crypto.spec.SecretKeySpec\nimport java.security.Key\nimport java.security.NoSuchAlgorithmException\nimport java.util.Base64\n\ndef flowFile = session.get()\nif (!flowFile) return\n\npublic static String getDecryptedValue(String value, String encryptionKey) {\n    //return value\n    String decValue = null\n    try {\n        Key aesKey = new SecretKeySpec(encryptionKey.getBytes(\"UTF-8\"), \"AES\")\n        Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\")\n        cipher.init(Cipher.DECRYPT_MODE, aesKey)\n        decValue = new String(cipher.doFinal(Base64.decoder.decode(value)), StandardCharsets.UTF_8)\n    } catch (NoSuchAlgorithmException e) {\n        e.printStackTrace()\n    }\n    return decValue\n}\n\ntry {\n    flowFile = session.write(flowFile,\n        { inputStream, outputStream ->\n            def content = IOUtils.toString(inputStream, StandardCharsets.UTF_8)\n            def content_list = new JsonSlurper().parseText(content)\n            def result_list = []\n\n            // get attributes and parameters\n            def encrypted_fields = flowFile.getAttribute('encrypted_fields')\n            if (!encrypted_fields) {\n                encrypted_fields = context.getProperty('encrypted_fields').getValue()\n            }\n            if (!encrypted_fields) {\n                log.error('encrypted_fields is null')\n                return\n            }\n            def l = new JsonSlurper().parseText(encrypted_fields)\n\n            // get sensitive parameter\n            password = context.getProperty('encrypted_pass').evaluateAttributeExpressions().getValue()\n            if (!password) {\n                log.error('encrypted_pass is null')\n                return\n            }\n            \n            content_list.each { map ->\n                map.each { entry ->\n                    l.each { a ->\n                        if (entry.key == a.name && (entry.value) ) {\n                            entry.value = getDecryptedValue(entry.value, password)\n                        }\n                    }\n                }\n                result_list << map\n            }\n\n            json_out = new JsonGenerator.Options()\n                                    .disableUnicodeEscaping()\n                                    .build()\n                                    .toJson(result_list)\n\n            outputStream.write(json_out.getBytes(StandardCharsets.UTF_8))\n        } as StreamCallback)\n    session.transfer(flowFile, REL_SUCCESS)\n} catch (Exception e) {\n    log.error('Error during JSON operations', e)\n    session.transfer(flowFile, REL_FAILURE)\n}\n","encrypted_pass":"#{encrypted.key.sens}","Module Directory":null,"encrypted_fields":"[\n       {\n           \"name\": \"name\",\n           \"type\": 3\n       },\n       {\n           \"name\": \"email\",\n           \"type\": 4\n       }\n   ]"},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Engine","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"encrypted_pass":{"name":"encrypted_pass","displayName":"encrypted_pass","identifiesControllerService":false,"sensitive":true},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["FILE","DIRECTORY"]}},"encrypted_fields":{"name":"encrypted_fields","displayName":"encrypted_fields","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"3ab091b9-3d8b-3474-85a0-66b670117a59","instanceIdentifier":"bbef82c0-0191-1000-201d-12dc379161ec","name":"Encrypted","comments":"","position":{"x":464.0,"y":344.0},"type":"org.apache.nifi.processors.script.ScriptedTransformRecord","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.22.0"},"properties":{"Script File":null,"Script Engine":"Groovy","Script Body":"import javax.crypto.Cipher\nimport javax.crypto.SecretKey\nimport javax.crypto.SecretKeyFactory\nimport javax.crypto.spec.IvParameterSpec\nimport javax.crypto.spec.PBEKeySpec\nimport javax.crypto.spec.SecretKeySpec\nimport java.security.Key\nimport java.security.spec.KeySpec\n\nString encryptionKey = \"#{encryption.key}\"\nKey aesKey = new SecretKeySpec(encryptionKey.getBytes(\"UTF-8\"), \"AES\")\nCipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\")\ncipher.init(Cipher.ENCRYPT_MODE, aesKey)\nrecord.setValue(\"name\", cipher.doFinal(record.getValue(\"name\").getBytes(\"UTF-8\")).encodeBase64())\nrecord.setValue(\"email\", cipher.doFinal(record.getValue(\"email\").getBytes(\"UTF-8\")).encodeBase64())\nrecord","Record Writer":"ab313356-337b-3f84-8100-e015dd9a48ae","Record Reader":"0ba130e2-0c72-35ab-817e-108988f635e2","Module Directory":null},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Language","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"Record Writer":{"name":"Record Writer","displayName":"Record Writer","identifiesControllerService":true,"sensitive":false},"Record Reader":{"name":"Record Reader","displayName":"Record Reader","identifiesControllerService":true,"sensitive":false},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["FILE","DIRECTORY"]}}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"DISABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"7ed7d6f9-afe9-3147-aae6-48e33a6c0811","instanceIdentifier":"bbf4a69b-0191-1000-050d-b51530053a7a","name":"UpdateAttribute","comments":"","position":{"x":-48.0,"y":792.0},"type":"org.apache.nifi.processors.attributes.UpdateAttribute","bundle":{"group":"org.apache.nifi","artifact":"nifi-update-attribute-nar","version":"1.22.0"},"properties":{"Delete Attributes Expression":null,"filename":"a1.json","Store State":"Do not store state","canonical-value-lookup-cache-size":"100","Stateful Variables Initial Value":null},"propertyDescriptors":{"Delete Attributes Expression":{"name":"Delete Attributes Expression","displayName":"Delete Attributes Expression","identifiesControllerService":false,"sensitive":false},"filename":{"name":"filename","displayName":"filename","identifiesControllerService":false,"sensitive":false},"Store State":{"name":"Store State","displayName":"Store State","identifiesControllerService":false,"sensitive":false},"canonical-value-lookup-cache-size":{"name":"canonical-value-lookup-cache-size","displayName":"Cache Value Lookup Cache Size","identifiesControllerService":false,"sensitive":false},"Stateful Variables Initial Value":{"name":"Stateful Variables Initial Value","displayName":"Stateful Variables Initial Value","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":25,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["success"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"}],"inputPorts":[],"outputPorts":[],"connections":[{"identifier":"352c22db-8f25-38bf-b1fe-4e3187ebc18a","instanceIdentifier":"c0e8feaa-0191-1000-8393-220f89695793","name":"","source":{"id":"edab008e-ab2e-3674-98b5-056320b1a664","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Dencrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields","instanceIdentifier":"c0e8160a-0191-1000-b037-aa05f88dc185"},"destination":{"id":"038705ef-a9e3-36b9-acb7-2cf6de4d7453","type":"FUNNEL","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Funnel","comments":"","instanceIdentifier":"bc940e8c-0191-1000-5eda-c98c3913cd3b"},"labelIndex":1,"zIndex":0,"selectedRelationships":["failure"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"de8b7616-f6a8-3913-980b-441854c7f883","instanceIdentifier":"bc32b0ad-0191-1000-fe8a-4dafe29fcc28","name":"","source":{"id":"e2c0cb91-9b66-3f96-b35a-78759e788241","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"UpdateAttribute","comments":"","instanceIdentifier":"bc328b44-0191-1000-2243-35be8f704052"},"destination":{"id":"a4a48034-1975-326b-814f-d3a4f5d385cd","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Encrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields\n\nНеобязательные property:\nneed_normalyze (false) - необходимость нормализация полей;\nneed_debug_phone (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации;\nneed_debug_email (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации.","instanceIdentifier":"bc874a54-0191-1000-7da0-f01cb8b1485d"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"203fd353-c292-3598-a262-df1410e3f212","instanceIdentifier":"bbf437b5-0191-1000-762a-6834e121fcd4","name":"","source":{"id":"3ab091b9-3d8b-3474-85a0-66b670117a59","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Encrypted","comments":"","instanceIdentifier":"bbef82c0-0191-1000-201d-12dc379161ec"},"destination":{"id":"1cb87f13-3389-39a2-8fbc-e601c639e266","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Decrypted","comments":"","instanceIdentifier":"bbf31876-0191-1000-4f79-a0f977f5bd10"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"1c9114d0-b0c8-352f-85ad-b614437be5a8","instanceIdentifier":"bbf45515-0191-1000-d2c2-50d6bf511b30","name":"","source":{"id":"3ab091b9-3d8b-3474-85a0-66b670117a59","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Encrypted","comments":"","instanceIdentifier":"bbef82c0-0191-1000-201d-12dc379161ec"},"destination":{"id":"a9e3772d-5067-37a4-a122-95198c7fcbc9","type":"FUNNEL","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Funnel","comments":"","instanceIdentifier":"bbf443fb-0191-1000-9cc1-27395c637d63"},"labelIndex":1,"zIndex":0,"selectedRelationships":["failure"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"9046eff6-c80b-37b6-882d-b576d7996ea6","instanceIdentifier":"bc942211-0191-1000-8cf0-2974a9d2c931","name":"","source":{"id":"a4a48034-1975-326b-814f-d3a4f5d385cd","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Encrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields\n\nНеобязательные property:\nneed_normalyze (false) - необходимость нормализация полей;\nneed_debug_phone (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации;\nneed_debug_email (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации.","instanceIdentifier":"bc874a54-0191-1000-7da0-f01cb8b1485d"},"destination":{"id":"038705ef-a9e3-36b9-acb7-2cf6de4d7453","type":"FUNNEL","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Funnel","comments":"","instanceIdentifier":"bc940e8c-0191-1000-5eda-c98c3913cd3b"},"labelIndex":1,"zIndex":0,"selectedRelationships":["failure"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"9d38e1ed-c774-3bcd-babc-82780a6f3b96","instanceIdentifier":"bbf4d0c1-0191-1000-37b2-84e3b7f613cb","name":"","source":{"id":"1cb87f13-3389-39a2-8fbc-e601c639e266","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Decrypted","comments":"","instanceIdentifier":"bbf31876-0191-1000-4f79-a0f977f5bd10"},"destination":{"id":"2c9cabbe-5a1c-3e21-b098-6ed18bfa39ed","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"UpdateAttribute","comments":"","instanceIdentifier":"c1f565c5-0191-1000-8fff-77200f1c3ea9"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"4de80333-6953-3479-8960-a31ce333bb55","instanceIdentifier":"c1f62258-0191-1000-a198-f663d7963458","name":"","source":{"id":"9b7e1fd6-4a2d-3f2f-aad9-eb3084fbade6","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"PutFile","comments":"","instanceIdentifier":"c1f428d6-0191-1000-a49a-9f2ae54a5137"},"destination":{"id":"404e33aa-315b-37ce-93f0-5adab4b510b1","type":"FUNNEL","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Funnel","comments":"","instanceIdentifier":"c1f60fd7-0191-1000-368f-6e33e23c8f35"},"labelIndex":1,"zIndex":0,"selectedRelationships":["failure"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"8252c020-1415-36b2-99f2-04876db577b3","instanceIdentifier":"c0e92068-0191-1000-c1af-b286c20d9000","name":"","source":{"id":"edab008e-ab2e-3674-98b5-056320b1a664","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Dencrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields","instanceIdentifier":"c0e8160a-0191-1000-b037-aa05f88dc185"},"destination":{"id":"7ed7d6f9-afe9-3147-aae6-48e33a6c0811","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"UpdateAttribute","comments":"","instanceIdentifier":"bbf4a69b-0191-1000-050d-b51530053a7a"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"379c5338-0525-31ef-b2de-31c23be91caa","instanceIdentifier":"bbf46785-0191-1000-da6a-f0cc1babae0c","name":"","source":{"id":"1cb87f13-3389-39a2-8fbc-e601c639e266","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Decrypted","comments":"","instanceIdentifier":"bbf31876-0191-1000-4f79-a0f977f5bd10"},"destination":{"id":"a9e3772d-5067-37a4-a122-95198c7fcbc9","type":"FUNNEL","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Funnel","comments":"","instanceIdentifier":"bbf443fb-0191-1000-9cc1-27395c637d63"},"labelIndex":1,"zIndex":0,"selectedRelationships":["failure"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"06a46ea0-57d5-3ae3-8ea7-434cf2413619","instanceIdentifier":"bc943908-0191-1000-ee10-052f4269ff47","name":"","source":{"id":"a4a48034-1975-326b-814f-d3a4f5d385cd","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Encrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields\n\nНеобязательные property:\nneed_normalyze (false) - необходимость нормализация полей;\nneed_debug_phone (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации;\nneed_debug_email (false) - в выходные данные добавляются поля с исходным значением и флагом успешности нормализации.","instanceIdentifier":"bc874a54-0191-1000-7da0-f01cb8b1485d"},"destination":{"id":"edab008e-ab2e-3674-98b5-056320b1a664","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"Dencrypted","comments":"Обязательный property: encrypted_pass\nОбязательный property или атрибут: encrypted_fields","instanceIdentifier":"c0e8160a-0191-1000-b037-aa05f88dc185"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"26027bc2-eebb-39f3-9f76-c86923933d39","instanceIdentifier":"bbf2f926-0191-1000-56ee-8603b3b44523","name":"","source":{"id":"7e12b3e1-c8bd-3b89-9c98-5bd71556320f","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"GenerateFlowFile","comments":"","instanceIdentifier":"bbec8ea2-0191-1000-7a3f-e532c6fe2658"},"destination":{"id":"e2c0cb91-9b66-3f96-b35a-78759e788241","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"UpdateAttribute","comments":"","instanceIdentifier":"bc328b44-0191-1000-2243-35be8f704052"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"169cf355-efcb-3a93-bb40-97dc77b0a92a","instanceIdentifier":"c1f5beb2-0191-1000-2be8-7096c8461783","name":"","source":{"id":"2c9cabbe-5a1c-3e21-b098-6ed18bfa39ed","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"UpdateAttribute","comments":"","instanceIdentifier":"c1f565c5-0191-1000-8fff-77200f1c3ea9"},"destination":{"id":"9b7e1fd6-4a2d-3f2f-aad9-eb3084fbade6","type":"PROCESSOR","groupId":"56d81407-4f90-3b1d-b19e-f10fd15882c8","name":"PutFile","comments":"","instanceIdentifier":"c1f428d6-0191-1000-a49a-9f2ae54a5137"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":2000,"backPressureDataSizeThreshold":"200 MB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"}],"labels":[],"funnels":[{"identifier":"038705ef-a9e3-36b9-acb7-2cf6de4d7453","instanceIdentifier":"bc940e8c-0191-1000-5eda-c98c3913cd3b","position":{"x":-410.1072421274538,"y":469.7957817409743},"componentType":"FUNNEL","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"a9e3772d-5067-37a4-a122-95198c7fcbc9","instanceIdentifier":"bbf443fb-0191-1000-9cc1-27395c637d63","position":{"x":1119.9999647824181,"y":525.0},"componentType":"FUNNEL","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"404e33aa-315b-37ce-93f0-5adab4b510b1","instanceIdentifier":"c1f60fd7-0191-1000-368f-6e33e23c8f35","position":{"x":928.0,"y":1112.0},"componentType":"FUNNEL","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"}],"controllerServices":[{"identifier":"ab313356-337b-3f84-8100-e015dd9a48ae","instanceIdentifier":"bbf19c71-0191-1000-5c7b-55e71acaa5c3","name":"Enc_JsonRecordSetWriter","type":"org.apache.nifi.json.JsonRecordSetWriter","bundle":{"group":"org.apache.nifi","artifact":"nifi-record-serialization-services-nar","version":"1.22.0"},"properties":{"schema-branch":null,"compression-level":"1","schema-cache":null,"Timestamp Format":null,"Date Format":null,"Pretty Print JSON":"false","compression-format":"none","Schema Write Strategy":"no-schema","suppress-nulls":"never-suppress","output-grouping":"output-array","schema-name":"${schema.name}","schema-registry":null,"Time Format":null,"schema-access-strategy":"inherit-record-schema","schema-protocol-version":"1","schema-version":null,"schema-text":"${avro.schema}"},"propertyDescriptors":{"schema-branch":{"name":"schema-branch","displayName":"Schema Branch","identifiesControllerService":false,"sensitive":false},"compression-level":{"name":"compression-level","displayName":"Compression Level","identifiesControllerService":false,"sensitive":false},"schema-cache":{"name":"schema-cache","displayName":"Schema Cache","identifiesControllerService":true,"sensitive":false},"Timestamp Format":{"name":"Timestamp Format","displayName":"Timestamp Format","identifiesControllerService":false,"sensitive":false},"Date Format":{"name":"Date Format","displayName":"Date Format","identifiesControllerService":false,"sensitive":false},"Pretty Print JSON":{"name":"Pretty Print JSON","displayName":"Pretty Print JSON","identifiesControllerService":false,"sensitive":false},"compression-format":{"name":"compression-format","displayName":"Compression Format","identifiesControllerService":false,"sensitive":false},"Schema Write Strategy":{"name":"Schema Write Strategy","displayName":"Schema Write Strategy","identifiesControllerService":false,"sensitive":false},"suppress-nulls":{"name":"suppress-nulls","displayName":"Suppress Null Values","identifiesControllerService":false,"sensitive":false},"output-grouping":{"name":"output-grouping","displayName":"Output Grouping","identifiesControllerService":false,"sensitive":false},"schema-name":{"name":"schema-name","displayName":"Schema Name","identifiesControllerService":false,"sensitive":false},"schema-registry":{"name":"schema-registry","displayName":"Schema Registry","identifiesControllerService":true,"sensitive":false},"Time Format":{"name":"Time Format","displayName":"Time Format","identifiesControllerService":false,"sensitive":false},"schema-access-strategy":{"name":"schema-access-strategy","displayName":"Schema Access Strategy","identifiesControllerService":false,"sensitive":false},"schema-protocol-version":{"name":"schema-protocol-version","displayName":"Schema Protocol Version","identifiesControllerService":false,"sensitive":false},"schema-version":{"name":"schema-version","displayName":"Schema Version","identifiesControllerService":false,"sensitive":false},"schema-text":{"name":"schema-text","displayName":"Schema Text","identifiesControllerService":false,"sensitive":false}},"controllerServiceApis":[{"type":"org.apache.nifi.serialization.RecordSetWriterFactory","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-services-api-nar","version":"1.22.0"}}],"scheduledState":"DISABLED","bulletinLevel":"WARN","componentType":"CONTROLLER_SERVICE","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"},{"identifier":"0ba130e2-0c72-35ab-817e-108988f635e2","instanceIdentifier":"bbf169ee-0191-1000-7cae-8ecdb64fd043","name":"Enc_JsonTreeReader","type":"org.apache.nifi.json.JsonTreeReader","bundle":{"group":"org.apache.nifi","artifact":"nifi-record-serialization-services-nar","version":"1.22.0"},"properties":{"schema-branch":null,"schema-application-strategy":"SELECTED_PART","Timestamp Format":null,"schema-inference-cache":null,"Date Format":null,"schema-name":"${schema.name}","starting-field-strategy":"ROOT_NODE","schema-registry":null,"starting-field-name":null,"Time Format":null,"schema-access-strategy":"infer-schema","schema-version":null,"schema-text":"${avro.schema}"},"propertyDescriptors":{"schema-branch":{"name":"schema-branch","displayName":"Schema Branch","identifiesControllerService":false,"sensitive":false},"schema-application-strategy":{"name":"schema-application-strategy","displayName":"Schema Application Strategy","identifiesControllerService":false,"sensitive":false},"Timestamp Format":{"name":"Timestamp Format","displayName":"Timestamp Format","identifiesControllerService":false,"sensitive":false},"schema-inference-cache":{"name":"schema-inference-cache","displayName":"Schema Inference Cache","identifiesControllerService":true,"sensitive":false},"Date Format":{"name":"Date Format","displayName":"Date Format","identifiesControllerService":false,"sensitive":false},"schema-name":{"name":"schema-name","displayName":"Schema Name","identifiesControllerService":false,"sensitive":false},"starting-field-strategy":{"name":"starting-field-strategy","displayName":"Starting Field Strategy","identifiesControllerService":false,"sensitive":false},"schema-registry":{"name":"schema-registry","displayName":"Schema Registry","identifiesControllerService":true,"sensitive":false},"starting-field-name":{"name":"starting-field-name","displayName":"Starting Field Name","identifiesControllerService":false,"sensitive":false},"Time Format":{"name":"Time Format","displayName":"Time Format","identifiesControllerService":false,"sensitive":false},"schema-access-strategy":{"name":"schema-access-strategy","displayName":"Schema Access Strategy","identifiesControllerService":false,"sensitive":false},"schema-version":{"name":"schema-version","displayName":"Schema Version","identifiesControllerService":false,"sensitive":false},"schema-text":{"name":"schema-text","displayName":"Schema Text","identifiesControllerService":false,"sensitive":false}},"controllerServiceApis":[{"type":"org.apache.nifi.serialization.RecordReaderFactory","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-services-api-nar","version":"1.22.0"}}],"scheduledState":"DISABLED","bulletinLevel":"WARN","componentType":"CONTROLLER_SERVICE","groupIdentifier":"56d81407-4f90-3b1d-b19e-f10fd15882c8"}],"variables":{},"parameterContextName":"Encrypted","defaultFlowFileExpiration":"0 sec","defaultBackPressureObjectThreshold":2000,"defaultBackPressureDataSizeThreshold":"200 MB","componentType":"PROCESS_GROUP","flowFileConcurrency":"UNBOUNDED","flowFileOutboundPolicy":"STREAM_WHEN_AVAILABLE"},"externalControllerServices":{},"parameterContexts":{"Encrypted":{"name":"Encrypted","parameters":[{"name":"encryption.key","description":"","sensitive":false,"provided":false,"value":"abcdefgh_1234578"},{"name":"encrypted.key.sens","description":"","sensitive":true,"provided":false}],"inheritedParameterContexts":[],"componentType":"PARAMETER_CONTEXT"}},"flowEncodingVersion":"1.0","parameterProviders":{},"latest":false}